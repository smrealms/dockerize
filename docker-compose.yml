version: '3.7'

networks:
  frontend:
      name: frontend
      external: false
  backend:
      name: backend
      external: false

services:

    smr:
        image: smrealms/smr:latest
        restart: unless-stopped
        container_name: smr-game
        networks:
            - frontend
            - backend
        volumes:
            - ./config:/smr/config:ro
            - ./player-upload:/smr/htdocs/upload:rw
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.smr-game.rule=Host(`www.smrealms.de`, `smrealms.de`) && PathPrefix(`/`)"
            - "traefik.http.routers.smr-game.middlewares=nonwww-to-www@file"
        depends_on:
            - smtp
            - mysql
            - traefik

    smtp:
        image: hemberger/postfix-relay
        restart: unless-stopped
        container_name: smr-smtp
        networks:
            - backend
        environment:
            - POSTFIX_myhostname=einstein.fem.tu-ilmenau.de
            - OPENDKIM_DOMAINS=smrealms.de=key1
        volumes:
            - ./opendkim:/etc/opendkim/keys/smrealms.de

    mysql:
        image: mysql:5.7
        restart: unless-stopped
        container_name: ${MYSQL_HOST}
        networks:
            - backend
        # By using the default image, we must expose the secrets in
        # the runtime environment (because we can't specify build args).
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER:          smr
            MYSQL_PASSWORD:      ${MYSQL_PASSWORD}
            MYSQL_DATABASE:      smr_live
        volumes:
            - ./data/db:/var/lib/mysql
        # The mysql:5.7+ docker default sql mode uses STRICT_TRANS_TABLES,
        # which is incompatible with the way the SMR database is used.
        # Therefore, we override CMD to omit this sql mode.
        command: ["mysqld", "--sql-mode=NO_ENGINE_SUBSTITUTION",
                  "--character-set-server=utf8",
                  "--collation-server=utf8_general_ci"]

    flyway:
        image: smrealms/smr:flyway
        command: -url=jdbc:mysql://${MYSQL_HOST}/smr_live?useSSL=false -user=smr -password=${MYSQL_PASSWORD} migrate
        networks:
            - backend
        depends_on:
            - mysql

    discord:
        image: smrealms/smr:discordbot
        restart: unless-stopped
        networks:
            - backend
        volumes:
            - ./config:/smr/config:ro
        depends_on:
            - mysql

    irc:
        image: smrealms/smr:ircbot
        restart: unless-stopped
        networks:
            - backend
        volumes:
            - ./config:/smr/config:ro
        depends_on:
            - mysql

    npc:
        image: smrealms/smr:npc
        restart: "no"
        networks:
            - backend
        volumes:
            - ./config:/smr/config:ro
        depends_on:
            - mysql
            - smtp

    pma:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        container_name: smr-phpmyadmin
        networks:
            - frontend
            - backend
        environment:
            PMA_HOST: ${MYSQL_HOST}
            PMA_ABSOLUTE_URI: /pma/
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.smr-pma.rule=Host(`www.smrealms.de`, `smrealms.de`) && PathPrefix(`/pma`)"
            - "traefik.http.routers.smr-pma.middlewares=slash-then-strip@file"
        depends_on:
            - mysql
            - traefik

    api-docs:
        image: smrealms/smr:api-docs
        restart: unless-stopped
        networks:
            - frontend
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.smr-api.rule=Host(`api.smrealms.de`)"
        depends_on:
            - traefik

    traefik:
        image: traefik:2.2
        restart: unless-stopped
        container_name: smr-traefik
        networks:
            - frontend
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik:/etc/traefik
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`traefik.smrealms.de`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.frontend.auth.basic.users=traefik:$$apr1$$N1XTczE5$$5GvS93f.oSRstkxmjw9JD0"
        ports:
            - "80:80"
            - "443:443"
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "7"
                compress: "true"

    backup-s3:
        image: hemberger/docker-backup-to-s3
        networks:
            - backend
        environment:
            ACCESS_KEY: ${S3_ACCESS_KEY}
            SECRET_KEY: ${S3_SECRET_KEY}
            S3_PATH: s3://smrealms-backup
        volumes:
            - ./backup/daily:/data/daily
            - ./backup/archive:/data/archive
            - ./player-upload:/data/player-upload
